/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.0.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BungieNetPlatform.BungieNetPlatform.Api;
using BungieNetPlatform.BungieNetPlatform.Model;
using BungieNetPlatform.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BungieNetPlatform.Test
{
    /// <summary>
    ///  Class for testing DestinyDefinitionsSocketsDestinySocketTypeDefinition
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DestinyDefinitionsSocketsDestinySocketTypeDefinitionTests
    {
        // TODO uncomment below to declare an instance variable for DestinyDefinitionsSocketsDestinySocketTypeDefinition
        //private DestinyDefinitionsSocketsDestinySocketTypeDefinition instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DestinyDefinitionsSocketsDestinySocketTypeDefinition
            //instance = new DestinyDefinitionsSocketsDestinySocketTypeDefinition();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DestinyDefinitionsSocketsDestinySocketTypeDefinition
        /// </summary>
        [Test]
        public void DestinyDefinitionsSocketsDestinySocketTypeDefinitionInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DestinyDefinitionsSocketsDestinySocketTypeDefinition
            //Assert.IsInstanceOfType<DestinyDefinitionsSocketsDestinySocketTypeDefinition> (instance, "variable 'instance' is a DestinyDefinitionsSocketsDestinySocketTypeDefinition");
        }


        /// <summary>
        /// Test the property 'DisplayProperties'
        /// </summary>
        [Test]
        public void DisplayPropertiesTest()
        {
            // TODO unit test for the property 'DisplayProperties'
        }
        /// <summary>
        /// Test the property 'InsertAction'
        /// </summary>
        [Test]
        public void InsertActionTest()
        {
            // TODO unit test for the property 'InsertAction'
        }
        /// <summary>
        /// Test the property 'PlugWhitelist'
        /// </summary>
        [Test]
        public void PlugWhitelistTest()
        {
            // TODO unit test for the property 'PlugWhitelist'
        }
        /// <summary>
        /// Test the property 'SocketCategoryHash'
        /// </summary>
        [Test]
        public void SocketCategoryHashTest()
        {
            // TODO unit test for the property 'SocketCategoryHash'
        }
        /// <summary>
        /// Test the property 'Visibility'
        /// </summary>
        [Test]
        public void VisibilityTest()
        {
            // TODO unit test for the property 'Visibility'
        }
        /// <summary>
        /// Test the property 'Hash'
        /// </summary>
        [Test]
        public void HashTest()
        {
            // TODO unit test for the property 'Hash'
        }
        /// <summary>
        /// Test the property 'Index'
        /// </summary>
        [Test]
        public void IndexTest()
        {
            // TODO unit test for the property 'Index'
        }
        /// <summary>
        /// Test the property 'Redacted'
        /// </summary>
        [Test]
        public void RedactedTest()
        {
            // TODO unit test for the property 'Redacted'
        }

    }

}
