/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieNetPlatform.Client.SwaggerDateConverter;

namespace BungieNetPlatform.Model
{
    /// <summary>
    /// TrendingTrendingDetail
    /// </summary>
    [DataContract]
    public partial class TrendingTrendingDetail :  IEquatable<TrendingTrendingDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TrendingTrendingDetail" /> class.
        /// </summary>
        /// <param name="Identifier">Identifier.</param>
        /// <param name="EntityType">EntityType.</param>
        /// <param name="News">News.</param>
        /// <param name="Support">Support.</param>
        /// <param name="DestinyItem">DestinyItem.</param>
        /// <param name="DestinyActivity">DestinyActivity.</param>
        /// <param name="DestinyRitual">DestinyRitual.</param>
        /// <param name="Creation">Creation.</param>
        /// <param name="Stream">Stream.</param>
        public TrendingTrendingDetail(string Identifier = default(string), TrendingTrendingEntryType EntityType = default(TrendingTrendingEntryType), TrendingTrendingEntryNews News = default(TrendingTrendingEntryNews), TrendingTrendingEntrySupportArticle Support = default(TrendingTrendingEntrySupportArticle), TrendingTrendingEntryDestinyItem DestinyItem = default(TrendingTrendingEntryDestinyItem), TrendingTrendingEntryDestinyActivity DestinyActivity = default(TrendingTrendingEntryDestinyActivity), TrendingTrendingEntryDestinyRitual DestinyRitual = default(TrendingTrendingEntryDestinyRitual), TrendingTrendingEntryCommunityCreation Creation = default(TrendingTrendingEntryCommunityCreation), TrendingTrendingEntryCommunityStream Stream = default(TrendingTrendingEntryCommunityStream))
        {
            this.Identifier = Identifier;
            this.EntityType = EntityType;
            this.News = News;
            this.Support = Support;
            this.DestinyItem = DestinyItem;
            this.DestinyActivity = DestinyActivity;
            this.DestinyRitual = DestinyRitual;
            this.Creation = Creation;
            this.Stream = Stream;
        }
        
        /// <summary>
        /// Gets or Sets Identifier
        /// </summary>
        [DataMember(Name="identifier", EmitDefaultValue=false)]
        public string Identifier { get; set; }

        /// <summary>
        /// Gets or Sets EntityType
        /// </summary>
        [DataMember(Name="entityType", EmitDefaultValue=false)]
        public TrendingTrendingEntryType EntityType { get; set; }

        /// <summary>
        /// Gets or Sets News
        /// </summary>
        [DataMember(Name="news", EmitDefaultValue=false)]
        public TrendingTrendingEntryNews News { get; set; }

        /// <summary>
        /// Gets or Sets Support
        /// </summary>
        [DataMember(Name="support", EmitDefaultValue=false)]
        public TrendingTrendingEntrySupportArticle Support { get; set; }

        /// <summary>
        /// Gets or Sets DestinyItem
        /// </summary>
        [DataMember(Name="destinyItem", EmitDefaultValue=false)]
        public TrendingTrendingEntryDestinyItem DestinyItem { get; set; }

        /// <summary>
        /// Gets or Sets DestinyActivity
        /// </summary>
        [DataMember(Name="destinyActivity", EmitDefaultValue=false)]
        public TrendingTrendingEntryDestinyActivity DestinyActivity { get; set; }

        /// <summary>
        /// Gets or Sets DestinyRitual
        /// </summary>
        [DataMember(Name="destinyRitual", EmitDefaultValue=false)]
        public TrendingTrendingEntryDestinyRitual DestinyRitual { get; set; }

        /// <summary>
        /// Gets or Sets Creation
        /// </summary>
        [DataMember(Name="creation", EmitDefaultValue=false)]
        public TrendingTrendingEntryCommunityCreation Creation { get; set; }

        /// <summary>
        /// Gets or Sets Stream
        /// </summary>
        [DataMember(Name="stream", EmitDefaultValue=false)]
        public TrendingTrendingEntryCommunityStream Stream { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TrendingTrendingDetail {\n");
            sb.Append("  Identifier: ").Append(Identifier).Append("\n");
            sb.Append("  EntityType: ").Append(EntityType).Append("\n");
            sb.Append("  News: ").Append(News).Append("\n");
            sb.Append("  Support: ").Append(Support).Append("\n");
            sb.Append("  DestinyItem: ").Append(DestinyItem).Append("\n");
            sb.Append("  DestinyActivity: ").Append(DestinyActivity).Append("\n");
            sb.Append("  DestinyRitual: ").Append(DestinyRitual).Append("\n");
            sb.Append("  Creation: ").Append(Creation).Append("\n");
            sb.Append("  Stream: ").Append(Stream).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TrendingTrendingDetail);
        }

        /// <summary>
        /// Returns true if TrendingTrendingDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of TrendingTrendingDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TrendingTrendingDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Identifier == input.Identifier ||
                    (this.Identifier != null &&
                    this.Identifier.Equals(input.Identifier))
                ) && 
                (
                    this.EntityType == input.EntityType ||
                    (this.EntityType != null &&
                    this.EntityType.Equals(input.EntityType))
                ) && 
                (
                    this.News == input.News ||
                    (this.News != null &&
                    this.News.Equals(input.News))
                ) && 
                (
                    this.Support == input.Support ||
                    (this.Support != null &&
                    this.Support.Equals(input.Support))
                ) && 
                (
                    this.DestinyItem == input.DestinyItem ||
                    (this.DestinyItem != null &&
                    this.DestinyItem.Equals(input.DestinyItem))
                ) && 
                (
                    this.DestinyActivity == input.DestinyActivity ||
                    (this.DestinyActivity != null &&
                    this.DestinyActivity.Equals(input.DestinyActivity))
                ) && 
                (
                    this.DestinyRitual == input.DestinyRitual ||
                    (this.DestinyRitual != null &&
                    this.DestinyRitual.Equals(input.DestinyRitual))
                ) && 
                (
                    this.Creation == input.Creation ||
                    (this.Creation != null &&
                    this.Creation.Equals(input.Creation))
                ) && 
                (
                    this.Stream == input.Stream ||
                    (this.Stream != null &&
                    this.Stream.Equals(input.Stream))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Identifier != null)
                    hashCode = hashCode * 59 + this.Identifier.GetHashCode();
                if (this.EntityType != null)
                    hashCode = hashCode * 59 + this.EntityType.GetHashCode();
                if (this.News != null)
                    hashCode = hashCode * 59 + this.News.GetHashCode();
                if (this.Support != null)
                    hashCode = hashCode * 59 + this.Support.GetHashCode();
                if (this.DestinyItem != null)
                    hashCode = hashCode * 59 + this.DestinyItem.GetHashCode();
                if (this.DestinyActivity != null)
                    hashCode = hashCode * 59 + this.DestinyActivity.GetHashCode();
                if (this.DestinyRitual != null)
                    hashCode = hashCode * 59 + this.DestinyRitual.GetHashCode();
                if (this.Creation != null)
                    hashCode = hashCode * 59 + this.Creation.GetHashCode();
                if (this.Stream != null)
                    hashCode = hashCode * 59 + this.Stream.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
