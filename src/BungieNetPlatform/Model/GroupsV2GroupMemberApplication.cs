/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieNetPlatform.Client.SwaggerDateConverter;

namespace BungieNetPlatform.Model
{
    /// <summary>
    /// GroupsV2GroupMemberApplication
    /// </summary>
    [DataContract]
    public partial class GroupsV2GroupMemberApplication :  IEquatable<GroupsV2GroupMemberApplication>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GroupsV2GroupMemberApplication" /> class.
        /// </summary>
        /// <param name="GroupId">GroupId.</param>
        /// <param name="CreationDate">CreationDate.</param>
        /// <param name="ResolveState">ResolveState.</param>
        /// <param name="ResolveDate">ResolveDate.</param>
        /// <param name="ResolvedByMembershipId">ResolvedByMembershipId.</param>
        /// <param name="RequestMessage">RequestMessage.</param>
        /// <param name="ResolveMessage">ResolveMessage.</param>
        /// <param name="DestinyUserInfo">DestinyUserInfo.</param>
        /// <param name="BungieNetUserInfo">BungieNetUserInfo.</param>
        public GroupsV2GroupMemberApplication(long? GroupId = default(long?), DateTime? CreationDate = default(DateTime?), GroupsV2GroupApplicationResolveState ResolveState = default(GroupsV2GroupApplicationResolveState), DateTime? ResolveDate = default(DateTime?), long? ResolvedByMembershipId = default(long?), string RequestMessage = default(string), string ResolveMessage = default(string), UserUserInfoCard DestinyUserInfo = default(UserUserInfoCard), UserUserInfoCard BungieNetUserInfo = default(UserUserInfoCard))
        {
            this.GroupId = GroupId;
            this.CreationDate = CreationDate;
            this.ResolveState = ResolveState;
            this.ResolveDate = ResolveDate;
            this.ResolvedByMembershipId = ResolvedByMembershipId;
            this.RequestMessage = RequestMessage;
            this.ResolveMessage = ResolveMessage;
            this.DestinyUserInfo = DestinyUserInfo;
            this.BungieNetUserInfo = BungieNetUserInfo;
        }
        
        /// <summary>
        /// Gets or Sets GroupId
        /// </summary>
        [DataMember(Name="groupId", EmitDefaultValue=false)]
        public long? GroupId { get; set; }

        /// <summary>
        /// Gets or Sets CreationDate
        /// </summary>
        [DataMember(Name="creationDate", EmitDefaultValue=false)]
        public DateTime? CreationDate { get; set; }

        /// <summary>
        /// Gets or Sets ResolveState
        /// </summary>
        [DataMember(Name="resolveState", EmitDefaultValue=false)]
        public GroupsV2GroupApplicationResolveState ResolveState { get; set; }

        /// <summary>
        /// Gets or Sets ResolveDate
        /// </summary>
        [DataMember(Name="resolveDate", EmitDefaultValue=false)]
        public DateTime? ResolveDate { get; set; }

        /// <summary>
        /// Gets or Sets ResolvedByMembershipId
        /// </summary>
        [DataMember(Name="resolvedByMembershipId", EmitDefaultValue=false)]
        public long? ResolvedByMembershipId { get; set; }

        /// <summary>
        /// Gets or Sets RequestMessage
        /// </summary>
        [DataMember(Name="requestMessage", EmitDefaultValue=false)]
        public string RequestMessage { get; set; }

        /// <summary>
        /// Gets or Sets ResolveMessage
        /// </summary>
        [DataMember(Name="resolveMessage", EmitDefaultValue=false)]
        public string ResolveMessage { get; set; }

        /// <summary>
        /// Gets or Sets DestinyUserInfo
        /// </summary>
        [DataMember(Name="destinyUserInfo", EmitDefaultValue=false)]
        public UserUserInfoCard DestinyUserInfo { get; set; }

        /// <summary>
        /// Gets or Sets BungieNetUserInfo
        /// </summary>
        [DataMember(Name="bungieNetUserInfo", EmitDefaultValue=false)]
        public UserUserInfoCard BungieNetUserInfo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GroupsV2GroupMemberApplication {\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("  ResolveState: ").Append(ResolveState).Append("\n");
            sb.Append("  ResolveDate: ").Append(ResolveDate).Append("\n");
            sb.Append("  ResolvedByMembershipId: ").Append(ResolvedByMembershipId).Append("\n");
            sb.Append("  RequestMessage: ").Append(RequestMessage).Append("\n");
            sb.Append("  ResolveMessage: ").Append(ResolveMessage).Append("\n");
            sb.Append("  DestinyUserInfo: ").Append(DestinyUserInfo).Append("\n");
            sb.Append("  BungieNetUserInfo: ").Append(BungieNetUserInfo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GroupsV2GroupMemberApplication);
        }

        /// <summary>
        /// Returns true if GroupsV2GroupMemberApplication instances are equal
        /// </summary>
        /// <param name="input">Instance of GroupsV2GroupMemberApplication to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GroupsV2GroupMemberApplication input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.GroupId == input.GroupId ||
                    (this.GroupId != null &&
                    this.GroupId.Equals(input.GroupId))
                ) && 
                (
                    this.CreationDate == input.CreationDate ||
                    (this.CreationDate != null &&
                    this.CreationDate.Equals(input.CreationDate))
                ) && 
                (
                    this.ResolveState == input.ResolveState ||
                    (this.ResolveState != null &&
                    this.ResolveState.Equals(input.ResolveState))
                ) && 
                (
                    this.ResolveDate == input.ResolveDate ||
                    (this.ResolveDate != null &&
                    this.ResolveDate.Equals(input.ResolveDate))
                ) && 
                (
                    this.ResolvedByMembershipId == input.ResolvedByMembershipId ||
                    (this.ResolvedByMembershipId != null &&
                    this.ResolvedByMembershipId.Equals(input.ResolvedByMembershipId))
                ) && 
                (
                    this.RequestMessage == input.RequestMessage ||
                    (this.RequestMessage != null &&
                    this.RequestMessage.Equals(input.RequestMessage))
                ) && 
                (
                    this.ResolveMessage == input.ResolveMessage ||
                    (this.ResolveMessage != null &&
                    this.ResolveMessage.Equals(input.ResolveMessage))
                ) && 
                (
                    this.DestinyUserInfo == input.DestinyUserInfo ||
                    (this.DestinyUserInfo != null &&
                    this.DestinyUserInfo.Equals(input.DestinyUserInfo))
                ) && 
                (
                    this.BungieNetUserInfo == input.BungieNetUserInfo ||
                    (this.BungieNetUserInfo != null &&
                    this.BungieNetUserInfo.Equals(input.BungieNetUserInfo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GroupId != null)
                    hashCode = hashCode * 59 + this.GroupId.GetHashCode();
                if (this.CreationDate != null)
                    hashCode = hashCode * 59 + this.CreationDate.GetHashCode();
                if (this.ResolveState != null)
                    hashCode = hashCode * 59 + this.ResolveState.GetHashCode();
                if (this.ResolveDate != null)
                    hashCode = hashCode * 59 + this.ResolveDate.GetHashCode();
                if (this.ResolvedByMembershipId != null)
                    hashCode = hashCode * 59 + this.ResolvedByMembershipId.GetHashCode();
                if (this.RequestMessage != null)
                    hashCode = hashCode * 59 + this.RequestMessage.GetHashCode();
                if (this.ResolveMessage != null)
                    hashCode = hashCode * 59 + this.ResolveMessage.GetHashCode();
                if (this.DestinyUserInfo != null)
                    hashCode = hashCode * 59 + this.DestinyUserInfo.GetHashCode();
                if (this.BungieNetUserInfo != null)
                    hashCode = hashCode * 59 + this.BungieNetUserInfo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
