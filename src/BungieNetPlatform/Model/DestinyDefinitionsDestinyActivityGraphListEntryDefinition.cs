/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieNetPlatform.Client.SwaggerDateConverter;

namespace BungieNetPlatform.Model
{
    /// <summary>
    /// Destinations and Activities may have default Activity Graphs that should be shown when you bring up the Director and are playing in either.  This contract defines the graph referred to and the gating for when it is relevant.
    /// </summary>
    [DataContract]
    public partial class DestinyDefinitionsDestinyActivityGraphListEntryDefinition :  IEquatable<DestinyDefinitionsDestinyActivityGraphListEntryDefinition>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyDefinitionsDestinyActivityGraphListEntryDefinition" /> class.
        /// </summary>
        /// <param name="ActivityGraphHash">The hash identifier of the DestinyActivityGraphDefinition that should be shown when opening the director..</param>
        public DestinyDefinitionsDestinyActivityGraphListEntryDefinition(uint? ActivityGraphHash = default(uint?))
        {
            this.ActivityGraphHash = ActivityGraphHash;
        }
        
        /// <summary>
        /// The hash identifier of the DestinyActivityGraphDefinition that should be shown when opening the director.
        /// </summary>
        /// <value>The hash identifier of the DestinyActivityGraphDefinition that should be shown when opening the director.</value>
        [DataMember(Name="activityGraphHash", EmitDefaultValue=false)]
        public uint? ActivityGraphHash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinyDefinitionsDestinyActivityGraphListEntryDefinition {\n");
            sb.Append("  ActivityGraphHash: ").Append(ActivityGraphHash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyDefinitionsDestinyActivityGraphListEntryDefinition);
        }

        /// <summary>
        /// Returns true if DestinyDefinitionsDestinyActivityGraphListEntryDefinition instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyDefinitionsDestinyActivityGraphListEntryDefinition to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyDefinitionsDestinyActivityGraphListEntryDefinition input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActivityGraphHash == input.ActivityGraphHash ||
                    (this.ActivityGraphHash != null &&
                    this.ActivityGraphHash.Equals(input.ActivityGraphHash))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActivityGraphHash != null)
                    hashCode = hashCode * 59 + this.ActivityGraphHash.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
