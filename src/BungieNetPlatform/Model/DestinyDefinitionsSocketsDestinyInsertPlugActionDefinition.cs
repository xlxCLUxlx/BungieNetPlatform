/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieNetPlatform.Client.SwaggerDateConverter;

namespace BungieNetPlatform.Model
{
    /// <summary>
    /// Data related to what happens while a plug is being inserted, mostly for UI purposes.
    /// </summary>
    [DataContract]
    public partial class DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition :  IEquatable<DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition" /> class.
        /// </summary>
        /// <param name="ActionExecuteSeconds">How long it takes for the Plugging of the item to be completed once it is initiated, if you care..</param>
        public DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition(int? ActionExecuteSeconds = default(int?))
        {
            this.ActionExecuteSeconds = ActionExecuteSeconds;
        }
        
        /// <summary>
        /// How long it takes for the Plugging of the item to be completed once it is initiated, if you care.
        /// </summary>
        /// <value>How long it takes for the Plugging of the item to be completed once it is initiated, if you care.</value>
        [DataMember(Name="actionExecuteSeconds", EmitDefaultValue=false)]
        public int? ActionExecuteSeconds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition {\n");
            sb.Append("  ActionExecuteSeconds: ").Append(ActionExecuteSeconds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition);
        }

        /// <summary>
        /// Returns true if DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition instances are equal
        /// </summary>
        /// <param name="input">Instance of DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DestinyDefinitionsSocketsDestinyInsertPlugActionDefinition input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ActionExecuteSeconds == input.ActionExecuteSeconds ||
                    (this.ActionExecuteSeconds != null &&
                    this.ActionExecuteSeconds.Equals(input.ActionExecuteSeconds))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActionExecuteSeconds != null)
                    hashCode = hashCode * 59 + this.ActionExecuteSeconds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
