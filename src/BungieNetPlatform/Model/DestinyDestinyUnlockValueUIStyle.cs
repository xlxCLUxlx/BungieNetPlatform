/* 
 * Bungie.Net API
 *
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.1.1
 * Contact: support@bungie.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BungieNetPlatform.Client.SwaggerDateConverter;

namespace BungieNetPlatform.Model
{
    /// <summary>
    /// If you&#39;re showing an unlock value in the UI, this is the format in which it should be shown. You&#39;ll have to build your own algorithms on the client side to determine how best to render these options.
    /// </summary>
    /// <value>If you&#39;re showing an unlock value in the UI, this is the format in which it should be shown. You&#39;ll have to build your own algorithms on the client side to determine how best to render these options.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DestinyDestinyUnlockValueUIStyle
    {
        
		/// <summary>
		/// Generally, Automatic means &quot;Just show the number&quot;
		/// </summary>
		[EnumMember(Value = "0")]
        Automatic,
        
		/// <summary>
		/// Show the number as a fractional value. For this to make sense, the value being displayed should have a comparable upper bound, like the progress to the next level of a Progression.
		/// </summary>
		[EnumMember(Value = "1")]
        Fraction,
        
		/// <summary>
		/// Show the number as a checkbox. 0 Will mean unchecked, any other value will mean checked.
		/// </summary>
		[EnumMember(Value = "2")]
        Checkbox,
        
		/// <summary>
		/// Show the number as a percentage. For this to make sense, the value being displayed should have a comparable upper bound, like the progress to the next level of a Progression.
		/// </summary>
		[EnumMember(Value = "3")]
        Percentage,
        
		/// <summary>
		/// Show the number as a date and time. The number will be the number of seconds since the Unix Epoch (January 1st, 1970 at midnight UTC). It&#39;ll be up to you to convert this into a date and time format understandable to the user in their time zone.
		/// </summary>
		[EnumMember(Value = "4")]
        DateTime,
        
		/// <summary>
		/// Show the number as a floating point value that represents a fraction, where 0 is min and 1 is max. For this to make sense, the value being displayed should have a comparable upper bound, like the progress to the next level of a Progression.
		/// </summary>
		[EnumMember(Value = "5")]
        FractionFloat,
        
		/// <summary>
		/// Show the number as a straight-up integer.
		/// </summary>
		[EnumMember(Value = "6")]
        Integer,
        
		/// <summary>
		/// Show the number as a time duration. The value will be returned as seconds.
		/// </summary>
		[EnumMember(Value = "7")]
        TimeDuration,
        
		/// <summary>
		/// Don&#39;t bother showing the value at all, it&#39;s not easily human-interpretable, and used for some internal purpose.
		/// </summary>
		[EnumMember(Value = "8")]
        Hidden
    }

}
